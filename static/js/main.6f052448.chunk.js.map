{"version":3,"sources":["components/Chart.js","components/Header.js","MainArea.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","state","chartData","className","data","this","width","height","options","title","display","text","fontSize","legend","position","scales","yAxes","ticks","min","max","Component","defaultProps","displayTitle","displayLegend","legendPosition","Header","color","App","getChartData","setState","chartDataJA","labels","datasets","label","backgroundColor","chartDataAA","chartDataP","chartDataTest","Container","fluid","Row","Col","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f052448.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {Container, Row, Col} from 'react-bootstrap'\nclass Chart extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData:props.chartData\n        }\n    }\n\n    static defaultProps = {\n        title: 'Title',\n        displayTitle: true,\n        displayLegend: true,\n        legendPosition: 'right'\n    }\n    \n\n\n\n    render () {\n      return(\n        \n          <div className=\"chart\">\n                \n            <Bar\n            data={this.state.chartData}\n            width = {10}\n            height = {8}\n            options={{\n                \n                title:{\n                    display:true,\n                    text: this.props.title,\n                    fontSize:25\n                },\n                legend:{\n                    display: false,\n                    position: 'bottom',\n                },\n                scales: {\n                    yAxes: [\n                    {\n                        ticks: {\n                        min: 0,\n                        max: 100\n                        }\n                    }\n                    ]\n                }\n            }}\n            /> \n            \n          </div>\n      )\n    } \n}\n\nexport default Chart;","import React, { Component } from 'react';\nimport App from '../App';\n\nclass Header extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <h1 color=''>AttentionBoard Test Today</h1>\n                <hr></hr>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, {Component} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass MainArea extends Component {\n    state = {  }\n    render() { \n        return (  \n            <Container>\n                <Row>\n                    <Col>\n                    Test1\n                    </Col>\n\n                    <Col>\n                    Test2\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n \nexport default MainArea;","import React, {Component} from 'react';\nimport { Navbar } from 'react-bootstrap';\n//import logo from './logo.svg';\n//import './App.css';\nimport Chart from './components/Chart'\nimport MainArea from './MainArea';\nimport HeaderBar from './components/Header'\nimport {Container, Row, Col} from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData:{}\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n  getChartData(){\n    // Ajax calls here\n    this.setState({\n      chartDataJA:{\n        \n        labels: ['Woche 1', 'Woche 2', 'Woche 3', 'Woche 4'],\n        datasets:[\n          {\n            label:'Gemeinsame Aufmerksamkeit',\n            data:[\n              54,\n              35,\n              80,\n              0,\n            ],\n            backgroundColor:[\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 0.1)',\n            ]\n          }\n        ]\n      },\n      chartDataAA:{\n        labels: ['Woche 1', 'Woche 2', 'Woche 3', 'Woche 4'],\n        datasets:[\n          {\n            label:'Aufmerksamkeits채hnlichkeit',\n            data:[\n              82,\n              0,\n              0,\n              0,\n            ],\n            backgroundColor:[\n              'rgba(255, 99, 132, 0.6)',\n              'rgba(54, 162, 235, 0.6)',\n              'rgba(255, 206, 86, 0.6)',\n              'rgba(75, 192, 192, 0.6)',\n            ]\n          }\n        ]\n      },\n      chartDataP:{\n        labels: ['Woche 1', 'Woche 2', 'Woche 3', 'Woche 4'],\n        datasets:[\n          {\n            label:'Pr채senz',\n            data:[\n              55,\n              60,\n              90,\n              100,\n            ],\n            backgroundColor:[\n              'rgba(255, 99, 132, 0.6)',\n              'rgba(54, 162, 235, 0.6)',\n              'rgba(255, 206, 86, 0.6)',\n              'rgba(75, 192, 192, 0.6)',\n            ]\n          }\n        ]\n      },\n      chartDataTest:{\n        labels: ['Woche 1', 'Woche 2', 'Woche 3', 'Woche 4'],\n        datasets:[\n          {\n            label:'Test',\n            data:[\n              54,\n              35,\n              80,\n              0,\n            ],\n            backgroundColor:[\n              'rgba(255, 99, 132, 0.9)',\n              'rgba(54, 162, 235, 0.9)',\n              'rgba(255, 206, 86, 0.9)',\n              'rgba(75, 192, 192, 0.9)',\n            ]\n          }\n        ]\n      }\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <HeaderBar/>\n        <Container fluid>\n          <Row>\n            <Col xs={2} fluid>\n              <Row>\n                <Col>\n                  <Chart chartData={this.state.chartDataTest}  title='Gemeinsame Aufmerksamkeit' legendPosition=\"bottom\"/>\n                </Col>\n              </Row>\n              <Row >\n                <Col>\n                  <Chart chartData={this.state.chartDataTest}  title='Gemeinsame Aufmerksamkeit' legendPosition=\"bottom\"/>\n                </Col>\n              </Row>\n              <Row >\n                <Col>\n                  <Chart chartData={this.state.chartDataTest}  title='Gemeinsame Aufmerksamkeit' legendPosition=\"bottom\"/>\n                </Col>\n              </Row>\n            </Col>\n\n            <Col xs={10}>\n              <Row>\n                  <Col>\n                      <Chart chartData={this.state.chartDataJA}  title='Gemeinsame Aufmerksamkeit' legendPosition=\"bottom\"/>\n                  </Col>\n                  <Col>\n                      <Chart chartData={this.state.chartDataAA}  title='Aufmerksamkeits채hnlichkeit' legendPosition=\"bottom\"/>\n                  </Col>\n              </Row>\n              <Row>\n                  <Col>\n                      <Chart chartData={this.state.chartDataP}    title='Pr채senz'   legendPosition=\"bottom\"/>\n                  </Col>\n                  <Col>\n                      <Chart chartData={this.state.chartDataTest}  title='Test' legendPosition=\"bottom\"/>\n                  </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}